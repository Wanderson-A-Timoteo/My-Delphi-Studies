unit CadastrarCriancas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UnitNossoMdiCadastro, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls, Vcl.ComCtrls,
  Vcl.Mask, FireDAC.Comp.Client, BibPesquisa, UnitNossoMdi;

type
  TFormCadastrarCriancas = class(TNossoMdi)
    EditNomeCrianca: TEdit;
    Label1: TLabel;
    EditNomeMae: TEdit;
    Label2: TLabel;
    EditNomePai: TEdit;
    Label3: TLabel;
    Label4: TLabel;
    EditNumeroPulseira: TEdit;
    Label5: TLabel;
    RadioGroupSairSozinho: TRadioGroup;
    SpbCodigo: TSpeedButton;
    Label6: TLabel;
    EditCodigo: TEdit;
    DtpDataEntrada: TDateTimePicker;
    DtpHorarioEntrada: TDateTimePicker;
    Label7: TLabel;
    Label8: TLabel;
    PanelBarraTitulo: TPanel;
    PanelBarraCodigo: TPanel;
    PanelBarraPulseira: TPanel;
    PanelBarraNomeCrianca: TPanel;
    PanelBarraNomeMae: TPanel;
    PanelBarraNomePai: TPanel;
    PanelBtnSalvar: TPanel;
    PanelBtnExcluir: TPanel;
    PanelBtnLimpar: TPanel;
    PanelBtnSair: TPanel;
    SpbSalvar: TSpeedButton;
    SpbExcluir: TSpeedButton;
    SpbLimpar: TSpeedButton;
    SpbFechar: TSpeedButton;
    SpbSair: TSpeedButton;
    procedure SpbCodigoClick(Sender: TObject);
    procedure EditCodigoEnter(Sender: TObject);
    procedure EditCodigoExit(Sender: TObject);
    procedure EditCodigoKeyPress(Sender: TObject; var Key: Char);
    procedure SpbSairClick(Sender: TObject);
    procedure SpbSalvarClick(Sender: TObject);
    procedure SpbLimparClick(Sender: TObject);
    procedure SpbSalvarMouseEnter(Sender: TObject);
    procedure SpbSalvarMouseLeave(Sender: TObject);
    procedure SpbExcluirMouseEnter(Sender: TObject);
    procedure SpbExcluirMouseLeave(Sender: TObject);
    procedure SpbLimparMouseEnter(Sender: TObject);
    procedure SpbLimparMouseLeave(Sender: TObject);
    procedure SpbFecharMouseEnter(Sender: TObject);
    procedure SpbFecharMouseLeave(Sender: TObject);
    procedure SpbFecharClick(Sender: TObject);
    procedure SpbSairMouseEnter(Sender: TObject);
    procedure SpbSairMouseLeave(Sender: TObject);
    procedure FormActivate(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormCadastrarCriancas: TFormCadastrarCriancas;

implementation

{$R *.dfm}

uses BibVariavel, bibmarco, DMDados, Login;

procedure TFormCadastrarCriancas.EditCodigoEnter(Sender: TObject);
begin
  inherited;
  //LimpaGroupBox(GroupBox);
  with DataModuleDados.QueryPesquisa do
  begin
    SQL.Clear;
    SQL.Add('SELECT MAX(codigo) AS ultimo       ');
    SQL.Add('FROM paraisokids.controle_criancas ');
    Open;
    if FieldByName('ULTIMO').AsInteger = 0 then
    begin
      EditCodigo.Text := '0001'
    end
    else
    begin
      EditCodigo.Text := CompletaZeros(IntToStr(FieldByName('ULTIMO').AsInteger+1),4);
    end;
  end;
  DtpDataEntrada.Date    := DataModuleDados.DataServidor(False);
  DtpHorarioEntrada.Time := DataModuleDados.DataServidor(False);;
  EditCodigo.SelectAll;
end;

procedure TFormCadastrarCriancas.EditCodigoExit(Sender: TObject);
begin
  inherited;
  if EditCodigo.Text <> '' then
  begin
    with DataModuleDados.QryCrianca do
    begin
      EditCodigo.Text := CompletaZeros(EditCodigo.Text,4);
      Close;
      Params.ParamByName('codigo').AsInteger  := StrToInt(EditCodigo.Text);
      Open;
      if IsEmpty then
      begin
        Insert;
      end
      else begin
        Edit;

        EditNumeroPulseira.Text             := FieldByName('numero_pulseira').AsString;
        EditNomeCrianca.Text                := FieldByName('nome_crianca').AsString;
        EditNomeMae.Text                    := FieldByName('nome_mae').AsString;
        EditNomePai.Text                    := FieldByName('nome_pai').AsString ;
        DtpDataEntrada.DateTime             := FieldByName('data_hora_entrada').AsDateTime;

        if FieldByName('sair_sozinho').AsString = 'S' then
        begin
          RadioGroupSairSozinho.ItemIndex   := 0;
        end else
          RadioGroupSairSozinho.ItemIndex   := 1;
        end;
    end;
  end;
end;

procedure TFormCadastrarCriancas.EditCodigoKeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
  Key := TestaNumero(Key);
end;

procedure TFormCadastrarCriancas.FormActivate(Sender: TObject);
begin
  inherited;
  //PanelContainer.Left := Round( (FormCadastrarCriancas.Width - PanelContainer.Width) / 2);
  //PanelContainer.Top  := Round( (FormCadastrarCriancas.Height - PanelContainer.Height) / 2);
end;

procedure TFormCadastrarCriancas.SpbCodigoClick(Sender: TObject);
begin
  inherited;
  Pesquisa2('Controle de Crianças','paraisokids.controle_criancas',['CODIGO', 'NUMERO_PULSEIRA', 'NOME_CRIANCA'],['Codigo', 'Nº da Pulseira', 'Nome da Criança'],'','',['NOME_CRIANCA', 'NUMERO_PULSEIRA'],['CODIGO'],[EditCodigo],'');
end;

procedure TFormCadastrarCriancas.SpbFecharClick(Sender: TObject);
begin
  inherited;
  Close;
end;

procedure TFormCadastrarCriancas.SpbSalvarClick(Sender: TObject);
begin
  inherited;
  if EditNumeroPulseira.Text = '' then
  begin
    ShowMessage('Número da pulseira é obrigatório!');
    EditNumeroPulseira.SetFocus;
    Exit;
  end;
  with DataModuleDados.QryCrianca do
  begin
    FieldByName('codigo').AsString                   := EditCodigo.Text;
    FieldByName('numero_pulseira').AsString          := EditNumeroPulseira.Text;
    FieldByName('nome_crianca').AsString             := EditNomeCrianca.Text;
    FieldByName('nome_mae').AsString                 := EditNomeMae.Text;
    FieldByName('nome_pai').AsString                 := EditNomePai.Text;
    FieldByName('data_hora_entrada').AsDateTime      := DtpDataEntrada.Date + DtpHorarioEntrada.Time;
    FieldByName('cod_usuario_atualizacao').AsInteger := StrToInt(Codigo_Usuario);
    FieldByName('data_hora_atualizacao').AsDateTime  := DataModuleDados.DataServidor(False);

    case RadioGroupSairSozinho.ItemIndex of
      0:FieldByName('sair_sozinho').AsString         := 'S';
      1:FieldByName('sair_sozinho').AsString         := 'N';
    end;

    Post;

    if ApplyUpdates(-1) <> 0 then
      raise Exception.Create('Ocorreu um problema na gravação dos dados...');

  end;

  ShowMessage('Cadastro realizado com sucesso!');
  EditCodigo.SetFocus;
end;


procedure TFormCadastrarCriancas.SpbSalvarMouseEnter(Sender: TObject);
begin
  inherited;
  SpbSalvar.Font.Color := clBlack;
end;

procedure TFormCadastrarCriancas.SpbSalvarMouseLeave(Sender: TObject);
begin
  inherited;
  SpbSalvar.Font.Color := clWhite;
end;

procedure TFormCadastrarCriancas.SpbExcluirMouseEnter(Sender: TObject);
begin
  inherited;
  SpbExcluir.Font.Color := clBlack;
end;

procedure TFormCadastrarCriancas.SpbExcluirMouseLeave(Sender: TObject);
begin
  inherited;
  SpbExcluir.Font.Color := clWhite;
end;

procedure TFormCadastrarCriancas.SpbFecharMouseEnter(Sender: TObject);
begin
  inherited;
  SpbFechar.Font.Color := clRed;
end;

procedure TFormCadastrarCriancas.SpbFecharMouseLeave(Sender: TObject);
begin
  inherited;
  SpbFechar.Font.Color := $00DFDFDF;
end;

procedure TFormCadastrarCriancas.SpbLimparClick(Sender: TObject);
begin
  inherited;
  EditCodigo.SetFocus;
end;

procedure TFormCadastrarCriancas.SpbLimparMouseEnter(Sender: TObject);
begin
  inherited;
  SpbLimpar.Font.Color := clBlack;
end;

procedure TFormCadastrarCriancas.SpbLimparMouseLeave(Sender: TObject);
begin
  inherited;
  SpbLimpar.Font.Color := clWhite;
end;

procedure TFormCadastrarCriancas.SpbSairClick(Sender: TObject);
begin
  inherited;
  Close;
end;

procedure TFormCadastrarCriancas.SpbSairMouseEnter(Sender: TObject);
begin
  inherited;
  SpbSair.Font.Color := clBlack;
end;

procedure TFormCadastrarCriancas.SpbSairMouseLeave(Sender: TObject);
begin
  inherited;
  SpbSair.Font.Color := clWhite;
end;

end.
