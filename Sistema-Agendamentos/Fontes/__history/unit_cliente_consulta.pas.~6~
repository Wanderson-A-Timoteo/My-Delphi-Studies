unit unit_cliente_consulta;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Imaging.pngimage, Vcl.ExtCtrls, Vcl.Buttons, Vcl.DBCtrls,
  Vcl.Mask, unit_dados, classe.profissionais, Data.DB, Vcl.Grids, Vcl.DBGrids, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async,
  FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  Tform_cliente_consulta = class(TForm)
    shape_fundo_form_agendamento: TShape;
    PanelAgrupaCamposAgendamento: TPanel;
    PanelContainer: TPanel;
    LabelNoemProfissional: TLabel;
    LabelTituloCadastrarProfissional: TLabel;
    PanelBotoesAgendarCancelar: TPanel;
    PanelBotaoAgendar: TPanel;
    PanelBotaoCadastrarNovoCliente: TPanel;
    SpeedButtonConsultarCliente: TSpeedButton;
    SpeedButtonCadastrarNovoCliente: TSpeedButton;
    EditNomeProfissional: TEdit;
    PanelBordaNomeProfissional: TPanel;
    PanelBordaEspecialidade: TPanel;
    dbg_registros: TDBGrid;
    Label1: TLabel;
    ds_cliente_consulta: TDataSource;
    Label10: TLabel;
    PanelBotaoCancelar: TPanel;
    SpeedButtonCancelarConsulta: TSpeedButton;
    procedure SpeedButtonCadastrarNovoClienteClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure dbg_registrosDrawColumnCell(Sender: TObject; const Rect: TRect; DataCol: Integer;
      Column: TColumn; State: TGridDrawState);
    procedure dbg_registrosKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure SpeedButtonConsultarClienteClick(Sender: TObject);
    procedure dbg_registrosDblClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  form_cliente_consulta: Tform_cliente_consulta;

implementation

{$R *.dfm}

uses unit_funcoes, unit_clientes, unit_profissionais;


procedure Tform_cliente_consulta.dbg_registrosDblClick(Sender: TObject);
begin
  if (not (dbg_registros.DataSource.DataSet.IsEmpty)) then
  begin
//    EditNomeProfissional.Text                := dbg_registros.DataSource.DataSet.FieldByName('ds_profissional').AsString;
//    EditEspecialidade.Text                   := dbg_registros.DataSource.DataSet.FieldByName('ds_especialidade').AsString;
//    MaskEditCelular.Text                     := dbg_registros.DataSource.DataSet.FieldByName('nr_contato').AsString;
//
//    DataModule1.Profissional.Id_Profissional := dbg_registros.DataSource.DataSet.FieldByName('id_profissional').AsInteger;
//
//    EditNomeProfissional.SetFocus;
  end;
end;

procedure Tform_cliente_consulta.dbg_registrosDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
  //prcDrawColumnCell(dbg_registros, Rect, DataCol, Column, State);
  //prcAjustaTamanhoLinha(dbg_Registros, 33);
end;

procedure Tform_cliente_consulta.dbg_registrosKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  if (not (dbg_registros.DataSource.DataSet.IsEmpty)) AND (key = VK_DELETE) then
    DataModule1.Profissional.prc_deleta(dbg_registros.DataSource.DataSet.FieldByName('id_profissional').AsInteger );

  //prcAjustaTamanhoLiha(dbg_Registros, 33);
end;

procedure Tform_cliente_consulta.FormShow(Sender: TObject);
begin
  //ds_profissionais.DataSet := DataModule1.Profissional.fnc_consulta('');
  //prcAjustaTamanhoLiha(dbg_Registros, 33);
end;

procedure Tform_cliente_consulta.SpeedButtonConsultarClienteClick(Sender: TObject);
var
  Operacao,
  Erro: string;
begin
  prcValidarCamposObrigatorios( form_profissionais );

  DataModule1.Profissional.ds_profissional  := EditNomeProfissional.Text;
  DataModule1.Profissional.ds_especialidade := EditEspecialidade.Text;
  DataModule1.Profissional.nr_contato       := MaskEditCelular.Text;

  if DataModule1.Profissional.Id_Profissional > 0 then
    Operacao := 'ALTERAR'
  else
    Operacao := 'INSERIR';

  if DataModule1.Profissional.fnc_inserir_altear(Operacao, Erro) then
  begin
    fnc_criar_mensagem('INSERINDO DADOS',
                       'Cadastrar/Alterar Profissional',
                       'Cadastro/Alteração Realizado com Sucesso! ' +
                       '',
                       ExtractFilePath(Application.ExeName) + '\imagens\aviso.png','OK');
    Close;
  end else
  begin
    fnc_criar_mensagem('INSERINDO DADOS',
                       'Erro ao Cadastrar/Alterar Profissional',
                       'Não foi possível Cadastrar/Alterar Profissional, possível causa: ' +
                       Erro,
                       ExtractFilePath(Application.ExeName) + '\imagens\erro.png','OK');

    EditNomeProfissional.SetFocus;
  end;
end;

procedure Tform_cliente_consulta.SpeedButtonCadastrarNovoClienteClick(Sender: TObject);
begin
  form_clientes := Tform_clientes.Create(Self);
  try
    form_clientes.ShowModal;
  finally
    form_clientes.Free;
  end;
end;

end.
